{"ast":null,"code":"var _jsxFileName = \"/Users/nicolaromani/Desktop/projects/frontend-assignment/packages/client/src/components/presentational/PokemonList.tsx\";\nimport React from \"react\";\nimport { List } from \"antd\";\nimport PokemonListItem from \"./PokemonListItem\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { ALL_POKEMONS, POKEMONS_BY_TYPE } from \"../../graphql/queries\";\nexport default (props => {\n  const {\n    loading,\n    error,\n    data: genericData,\n    fetchMore: genericFetchMore\n  } = useQuery(ALL_POKEMONS, {\n    variables: {\n      name: props.name,\n      limit: props.limit\n    },\n    skip: !!props.type,\n    fetchPolicy: \"cache-and-network\"\n  });\n  const {\n    loading: loadingTypes,\n    error: errorTypes,\n    data: typeData,\n    fetchMore: typeFetchMore\n  } = useQuery(POKEMONS_BY_TYPE, {\n    variables: {\n      type: props.type,\n      limit: props.limit\n    },\n    skip: !props.type,\n    fetchPolicy: \"cache-and-network\"\n  });\n\n  if (error || errorTypes) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 12\n      }\n    }, \"Sorry, something broke off. Reload the app to try again!\");\n  }\n\n  if (genericData) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, genericData && genericData.pokemons.edges.length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"noPokemons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, \"There are no pokemons matching your preferences! \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 62\n      }\n    }), \"Please try another configuration.\") : /*#__PURE__*/React.createElement(List, {\n      loading: !!loading,\n      loadMore: /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => genericFetchMore({\n          variables: {\n            cursor: genericData.pokemons.pageInfo.endCursor\n          },\n          updateQuery: (previousResult, {\n            fetchMoreResult\n          }) => {\n            const newEdges = fetchMoreResult.pokemons.edges;\n            const pageInfo = fetchMoreResult.pokemons.pageInfo;\n            const pokemons = previousResult.pokemons.edges;\n            return newEdges.length ? {\n              // Put the new comments at the end of the list and update `pageInfo`\n              // so we have the new `endCursor` and `hasNextPage` values\n              previousResult: {\n                pokemons: {\n                  edges: [...previousResult.pokemons.edges, ...newEdges.pokemons.edges],\n                  pageInfo\n                }\n              }\n            } : previousResult;\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }\n      }, \"cliccami\"),\n      dataSource: genericData.pokemons.edges,\n      pagination: {\n        position: \"top\",\n        pageSize: props.pageQuantity\n      },\n      renderItem: item => /*#__PURE__*/React.createElement(PokemonListItem, {\n        node: item.node,\n        key: Number(item.node.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }));\n  } else if (typeData) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, typeData && typeData.pokemonsByType.edges.length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"noPokemons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, \"There are no pokemons matching your preferences! \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 62\n      }\n    }), \"Please try another configuration.\") : /*#__PURE__*/React.createElement(List, {\n      loading: !!loadingTypes,\n      dataSource: typeData.pokemonsByType.edges,\n      loadMore: \"ciao\",\n      pagination: {\n        position: \"top\",\n        pageSize: props.pageQuantity\n      },\n      renderItem: item => /*#__PURE__*/React.createElement(PokemonListItem, {\n        node: item.node,\n        key: Number(item.node.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"noPokemons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }\n    }, \"There are no pokemons matching your preferences! \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 58\n      }\n    }), \"Please try another configuration.\");\n  }\n});","map":{"version":3,"sources":["/Users/nicolaromani/Desktop/projects/frontend-assignment/packages/client/src/components/presentational/PokemonList.tsx"],"names":["React","List","PokemonListItem","useQuery","ALL_POKEMONS","POKEMONS_BY_TYPE","props","loading","error","data","genericData","fetchMore","genericFetchMore","variables","name","limit","skip","type","fetchPolicy","loadingTypes","errorTypes","typeData","typeFetchMore","pokemons","edges","length","cursor","pageInfo","endCursor","updateQuery","previousResult","fetchMoreResult","newEdges","position","pageSize","pageQuantity","item","node","Number","id","pokemonsByType"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { List } from \"antd\";\nimport {\n  PokemonNode,\n  PokemonItem,\n  Connection,\n} from \"../../typescript/interfaces\";\nimport PokemonListItem from \"./PokemonListItem\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport { ALL_POKEMONS, POKEMONS_BY_TYPE } from \"../../graphql/queries\";\n\nexport default (props: {\n  name: string;\n  type: string;\n  limit: number;\n  pageQuantity: number;\n}) => {\n  const {\n    loading,\n    error,\n    data: genericData,\n    fetchMore: genericFetchMore,\n  } = useQuery(ALL_POKEMONS, {\n    variables: {\n      name: props.name,\n      limit: props.limit,\n    },\n    skip: !!props.type,\n    fetchPolicy: \"cache-and-network\",\n  });\n  const {\n    loading: loadingTypes,\n    error: errorTypes,\n    data: typeData,\n    fetchMore: typeFetchMore,\n  } = useQuery(POKEMONS_BY_TYPE, {\n    variables: {\n      type: props.type,\n      limit: props.limit,\n    },\n    skip: !props.type,\n    fetchPolicy: \"cache-and-network\",\n  });\n  if (error || errorTypes) {\n    return <div>Sorry, something broke off. Reload the app to try again!</div>;\n  }\n  if (genericData) {\n    return (\n      <>\n        {genericData && genericData.pokemons.edges.length === 0 ? (\n          <div className=\"noPokemons\">\n            There are no pokemons matching your preferences! <br />\n            Please try another configuration.\n          </div>\n        ) : (\n          <List\n            loading={!!loading}\n            loadMore={\n              <button\n                onClick={() =>\n                  genericFetchMore({\n                    variables: {\n                      cursor: genericData.pokemons.pageInfo.endCursor,\n                    },\n                    updateQuery: (\n                      previousResult,\n                      { fetchMoreResult }: { fetchMoreResult?: any }\n                    ) => {\n                      const newEdges = fetchMoreResult.pokemons.edges;\n                      const pageInfo = fetchMoreResult.pokemons.pageInfo;\n                      const pokemons = previousResult.pokemons.edges;\n\n                      return newEdges.length\n                        ? {\n                            // Put the new comments at the end of the list and update `pageInfo`\n                            // so we have the new `endCursor` and `hasNextPage` values\n                            previousResult: {\n                              pokemons: {\n                                edges: [\n                                  ...previousResult.pokemons.edges,\n                                  ...newEdges.pokemons.edges,\n                                ],\n                                pageInfo,\n                              },\n                            },\n                          }\n                        : previousResult;\n                    },\n                  })\n                }>\n                cliccami\n              </button>\n            }\n            dataSource={genericData.pokemons.edges}\n            pagination={{ position: \"top\", pageSize: props.pageQuantity }}\n            renderItem={(item: PokemonNode<PokemonItem>) => (\n              <PokemonListItem node={item.node} key={Number(item.node.id)} />\n            )}></List>\n        )}\n      </>\n    );\n  } else if (typeData) {\n    return (\n      <>\n        {typeData && typeData.pokemonsByType.edges.length === 0 ? (\n          <div className=\"noPokemons\">\n            There are no pokemons matching your preferences! <br />\n            Please try another configuration.\n          </div>\n        ) : (\n          <List\n            loading={!!loadingTypes}\n            dataSource={typeData.pokemonsByType.edges}\n            loadMore=\"ciao\"\n            pagination={{ position: \"top\", pageSize: props.pageQuantity }}\n            renderItem={(item: PokemonNode<PokemonItem>) => (\n              <PokemonListItem node={item.node} key={Number(item.node.id)} />\n            )}></List>\n        )}\n      </>\n    );\n  } else {\n    return (\n      <div className=\"noPokemons\">\n        There are no pokemons matching your preferences! <br />\n        Please try another configuration.\n      </div>\n    );\n  }\n};\n"]},"metadata":{},"sourceType":"module"}