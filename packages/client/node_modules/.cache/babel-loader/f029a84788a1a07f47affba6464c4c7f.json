{"ast":null,"code":"var _jsxFileName = \"/Users/nicolaromani/Desktop/projects/frontend-assignment/packages/client/src/components/presentational/PokemonList.tsx\";\nimport React from \"react\";\nimport { List } from \"antd\";\nimport PokemonListItem from \"./PokemonListItem\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nconst ALL_POKEMONS = gql`\n  query Pokemons($name: String, $after: ID, $limit: Int) {\n    pokemons(q: $name, after: $after, limit: $limit) {\n      edges {\n        node {\n          id\n          name\n          types\n          classification\n        }\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n  }\n`;\nexport default (props => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(ALL_POKEMONS, {\n    variables: {\n      name: props.name,\n      type: props.type,\n      limit: props.limit\n    },\n    fetchPolicy: \"cache-and-network\"\n  });\n  return /*#__PURE__*/React.createElement(List, {\n    dataSource: props.list,\n    pagination: {\n      position: \"top\"\n    },\n    renderItem: item => /*#__PURE__*/React.createElement(PokemonListItem, {\n      node: item.node,\n      key: Number(item.node.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  });\n});","map":{"version":3,"sources":["/Users/nicolaromani/Desktop/projects/frontend-assignment/packages/client/src/components/presentational/PokemonList.tsx"],"names":["React","List","PokemonListItem","useQuery","gql","ALL_POKEMONS","props","loading","error","data","variables","name","type","limit","fetchPolicy","list","position","item","node","Number","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,MAArB;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,MAAMC,YAAY,GAAGD,GAAI;;;;;;;;;;;;;;;;;CAAzB;AAmBA,gBAAgBE,KAAD,IAKT;AACJ,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BN,QAAQ,CAACE,YAAD,EAAe;AACtDK,IAAAA,SAAS,EAAE;AACTC,MAAAA,IAAI,EAAEL,KAAK,CAACK,IADH;AAETC,MAAAA,IAAI,EAAEN,KAAK,CAACM,IAFH;AAGTC,MAAAA,KAAK,EAAEP,KAAK,CAACO;AAHJ,KAD2C;AAMtDC,IAAAA,WAAW,EAAE;AANyC,GAAf,CAAzC;AAQA,sBACE,oBAAC,IAAD;AACE,IAAA,UAAU,EAAER,KAAK,CAACS,IADpB;AAEE,IAAA,UAAU,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAFd;AAGE,IAAA,UAAU,EAAGC,IAAD,iBACV,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAEA,IAAI,CAACC,IAA5B;AAAkC,MAAA,GAAG,EAAEC,MAAM,CAACF,IAAI,CAACC,IAAL,CAAUE,EAAX,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAQD,CAtBD","sourcesContent":["import React from \"react\";\nimport { List } from \"antd\";\nimport { PokemonNode, PokemonItem } from \"../../typescript/interfaces\";\nimport PokemonListItem from \"./PokemonListItem\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nimport gql from \"graphql-tag\";\n\nconst ALL_POKEMONS = gql`\n  query Pokemons($name: String, $after: ID, $limit: Int) {\n    pokemons(q: $name, after: $after, limit: $limit) {\n      edges {\n        node {\n          id\n          name\n          types\n          classification\n        }\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n  }\n`;\n\nexport default (props: {\n  name: string;\n  type: string;\n  limit: number;\n  fetchMore: boolean;\n}) => {\n  const { loading, error, data } = useQuery(ALL_POKEMONS, {\n    variables: {\n      name: props.name,\n      type: props.type,\n      limit: props.limit,\n    },\n    fetchPolicy: \"cache-and-network\",\n  });\n  return (\n    <List\n      dataSource={props.list}\n      pagination={{ position: \"top\" }}\n      renderItem={(item) => (\n        <PokemonListItem node={item.node} key={Number(item.node.id)} />\n      )}></List>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}