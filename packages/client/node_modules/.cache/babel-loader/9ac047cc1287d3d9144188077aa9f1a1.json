{"ast":null,"code":"var _jsxFileName = \"/Users/nicolaromani/Desktop/projects/frontend-assignment/packages/client/src/components/containers/Main.tsx\";\nimport React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport PageControl from \"./Header\";\nimport PokemonList from \"../presentational/PokemonList\"; // base query\n\nconst ALL_POKEMONS = gql`\n  query Pokemons($name: String) {\n    pokemons(q: $name) {\n      edges {\n        node {\n          id\n          name\n          types\n          classification\n        }\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n  }\n`;\nexport default (() => {\n  const [state, setState] = useState({\n    name: \"\",\n    type: \"\"\n  });\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(ALL_POKEMONS, {\n    variables: {\n      name: state.name\n    }\n  });\n  console.log(loading, error, data);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 12\n      }\n    }, \"Please wait, we are loading the data...\");\n  } else {\n    if (data && data.pokemons && data.pokemons.edges && data.pokemons.edges.length) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PageControl, {\n        setType: type => setState({ ...state,\n          type\n        }),\n        setName: name => setState({ ...state,\n          name\n        }),\n        name: state.name,\n        type: state.type,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(PokemonList, {\n        list: data.pokemons.edges,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 14\n        }\n      }, \"Sorry, something broke off. Please reload to try again!\");\n    }\n  }\n});","map":{"version":3,"sources":["/Users/nicolaromani/Desktop/projects/frontend-assignment/packages/client/src/components/containers/Main.tsx"],"names":["React","useState","useQuery","gql","PageControl","PokemonList","ALL_POKEMONS","state","setState","name","type","loading","error","data","variables","console","log","pokemons","edges","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA4C,OAA5C;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,WAAP,MAAwB,UAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB,C,CAEA;;AACA,MAAMC,YAAY,GAAGH,GAAI;;;;;;;;;;;;;;;;;CAAzB;AAmBA,gBAAe,MAAM;AACnB,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC;AACjCQ,IAAAA,IAAI,EAAE,EAD2B;AAEjCC,IAAAA,IAAI,EAAE;AAF2B,GAAD,CAAlC;AAIA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BX,QAAQ,CAACI,YAAD,EAAe;AACtDQ,IAAAA,SAAS,EAAE;AACTL,MAAAA,IAAI,EAAEF,KAAK,CAACE;AADH;AAD2C,GAAf,CAAzC;AAKAM,EAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ,EAAqBC,KAArB,EAA4BC,IAA5B;;AACA,MAAIF,OAAJ,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAAP;AACD,GAFD,MAEO;AACL,QACEE,IAAI,IACJA,IAAI,CAACI,QADL,IAEAJ,IAAI,CAACI,QAAL,CAAcC,KAFd,IAGAL,IAAI,CAACI,QAAL,CAAcC,KAAd,CAAoBC,MAJtB,EAKE;AACA,0BACE,uDACE,oBAAC,WAAD;AACE,QAAA,OAAO,EAAGT,IAAD,IAAkBF,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYG,UAAAA;AAAZ,SAAD,CADrC;AAEE,QAAA,OAAO,EAAGD,IAAD,IAAkBD,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYE,UAAAA;AAAZ,SAAD,CAFrC;AAGE,QAAA,IAAI,EAAEF,KAAK,CAACE,IAHd;AAIE,QAAA,IAAI,EAAEF,KAAK,CAACG,IAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAME,oBAAC,WAAD;AAAa,QAAA,IAAI,EAAEG,IAAI,CAACI,QAAL,CAAcC,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CADF;AAUD,KAhBD,MAgBO;AACL,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mEAAP;AACD;AACF;AACF,CAlCD","sourcesContent":["import React, { useState, useReducer } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport PageControl from \"./Header\";\nimport PokemonList from \"../presentational/PokemonList\";\n\n// base query\nconst ALL_POKEMONS = gql`\n  query Pokemons($name: String) {\n    pokemons(q: $name) {\n      edges {\n        node {\n          id\n          name\n          types\n          classification\n        }\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n  }\n`;\n\nexport default () => {\n  const [state, setState] = useState({\n    name: \"\",\n    type: \"\",\n  });\n  const { loading, error, data } = useQuery(ALL_POKEMONS, {\n    variables: {\n      name: state.name,\n    },\n  });\n  console.log(loading, error, data);\n  if (loading) {\n    return <div>Please wait, we are loading the data...</div>;\n  } else {\n    if (\n      data &&\n      data.pokemons &&\n      data.pokemons.edges &&\n      data.pokemons.edges.length\n    ) {\n      return (\n        <>\n          <PageControl\n            setType={(type: string) => setState({ ...state, type })}\n            setName={(name: string) => setState({ ...state, name })}\n            name={state.name}\n            type={state.type}></PageControl>\n          <PokemonList list={data.pokemons.edges}></PokemonList>\n        </>\n      );\n    } else {\n      return <div>Sorry, something broke off. Please reload to try again!</div>;\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}