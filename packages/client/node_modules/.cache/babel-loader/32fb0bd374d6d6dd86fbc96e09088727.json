{"ast":null,"code":"var _jsxFileName = \"/Users/nicolaromani/Desktop/projects/frontend-assignment/packages/client/src/components/containers/PageControl.tsx\";\nimport React, { useState } from \"react\";\nimport Options from \"./Options\";\nimport { PageHeader } from \"antd\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport PokemonList from \"../presentational/PokemonList\";\nconst ALL_POKEMONS = gql`\n  query Pokemons($name: String) {\n    pokemons(q: $name) {\n      edges {\n        node {\n          id\n          name\n          types\n          classification\n        }\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n  }\n`;\nexport default (() => {\n  const [state, setState] = useState({\n    name: \"\",\n    type: \"\"\n  });\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(ALL_POKEMONS, {\n    variables: {\n      name: state.name\n    }\n  });\n  console.log(loading, error, data);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 12\n      }\n    }, \"Please wait, we are loading the data...\");\n  } else {\n    if (data && data.pokemons && data.pokemons.edges && data.pokemons.edges.length) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Page\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(PageHeader, {\n        title: \"My Pokedex\",\n        ghost: false,\n        extra: /*#__PURE__*/React.createElement(Options, {\n          setType: type => setState({ ...state,\n            type\n          }),\n          setName: name => setState({ ...state,\n            name\n          }),\n          name: state.name,\n          type: state.type,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(PokemonList, {\n        list: data.pokemons.edges,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }\n      })));\n    }\n  }\n});","map":{"version":3,"sources":["/Users/nicolaromani/Desktop/projects/frontend-assignment/packages/client/src/components/containers/PageControl.tsx"],"names":["React","useState","Options","PageHeader","useQuery","gql","PokemonList","ALL_POKEMONS","state","setState","name","type","loading","error","data","variables","console","log","pokemons","edges","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,UAAT,QAA2B,MAA3B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AAEA,MAAMC,YAAY,GAAGF,GAAI;;;;;;;;;;;;;;;;;CAAzB;AAmBA,gBAAe,MAAM;AACnB,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC;AACjCS,IAAAA,IAAI,EAAE,EAD2B;AAEjCC,IAAAA,IAAI,EAAE;AAF2B,GAAD,CAAlC;AAIA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BV,QAAQ,CAACG,YAAD,EAAe;AACtDQ,IAAAA,SAAS,EAAE;AACTL,MAAAA,IAAI,EAAEF,KAAK,CAACE;AADH;AAD2C,GAAf,CAAzC;AAKAM,EAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ,EAAqBC,KAArB,EAA4BC,IAA5B;;AACA,MAAIF,OAAJ,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAAP;AACD,GAFD,MAEO;AACL,QACEE,IAAI,IACJA,IAAI,CAACI,QADL,IAEAJ,IAAI,CAACI,QAAL,CAAcC,KAFd,IAGAL,IAAI,CAACI,QAAL,CAAcC,KAAd,CAAoBC,MAJtB,EAKE;AACA,0BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,UAAD;AACE,QAAA,KAAK,EAAC,YADR;AAEE,QAAA,KAAK,EAAE,KAFT;AAGE,QAAA,KAAK,eACH,oBAAC,OAAD;AACE,UAAA,OAAO,EAAGT,IAAD,IAAkBF,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYG,YAAAA;AAAZ,WAAD,CADrC;AAEE,UAAA,OAAO,EAAGD,IAAD,IAAkBD,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYE,YAAAA;AAAZ,WAAD,CAFrC;AAGE,UAAA,IAAI,EAAEF,KAAK,CAACE,IAHd;AAIE,UAAA,IAAI,EAAEF,KAAK,CAACG,IAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAUE,oBAAC,WAAD;AAAa,QAAA,IAAI,EAAEG,IAAI,CAACI,QAAL,CAAcC,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,CADF,CADF;AAgBD;AACF;AACF,CAtCD","sourcesContent":["import React, { useState } from \"react\";\nimport Options from \"./Options\";\nimport { PageHeader } from \"antd\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport PokemonList from \"../presentational/PokemonList\";\n\nconst ALL_POKEMONS = gql`\n  query Pokemons($name: String) {\n    pokemons(q: $name) {\n      edges {\n        node {\n          id\n          name\n          types\n          classification\n        }\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n  }\n`;\n\nexport default () => {\n  const [state, setState] = useState({\n    name: \"\",\n    type: \"\",\n  });\n  const { loading, error, data } = useQuery(ALL_POKEMONS, {\n    variables: {\n      name: state.name,\n    },\n  });\n  console.log(loading, error, data);\n  if (loading) {\n    return <div>Please wait, we are loading the data...</div>;\n  } else {\n    if (\n      data &&\n      data.pokemons &&\n      data.pokemons.edges &&\n      data.pokemons.edges.length\n    ) {\n      return (\n        <div className=\"Page\">\n          <PageHeader\n            title=\"My Pokedex\"\n            ghost={false}\n            extra={\n              <Options\n                setType={(type: string) => setState({ ...state, type })}\n                setName={(name: string) => setState({ ...state, name })}\n                name={state.name}\n                type={state.type}></Options>\n            }>\n            <PokemonList list={data.pokemons.edges}></PokemonList>\n          </PageHeader>\n        </div>\n      );\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}