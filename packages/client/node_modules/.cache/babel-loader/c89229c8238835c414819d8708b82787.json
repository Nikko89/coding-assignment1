{"ast":null,"code":"var _jsxFileName = \"/Users/nicolaromani/Desktop/projects/frontend-assignment/packages/client/src/components/containers/Main.tsx\";\nimport React, { useReducer } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport Header from \"./Header\";\nimport PokemonList from \"../presentational/PokemonList\"; // base query\n\nconst ALL_POKEMONS = gql`\n  query pokemons {\n    pokemons(limit: 15) {\n      edges {\n        node {\n          id\n          name\n          types\n          classification\n        }\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n  }\n`; // init reducer variables\n\nconst initialState = {\n  name: \"\",\n  type: \"\"\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"SEARCH_BY_NAME\":\n      return { ...state,\n        name: action.payload || \"\"\n      };\n\n    case \"SEARCH_BY_TYPE\":\n      return { ...state,\n        type: action.payload || \"\"\n      };\n  }\n};\n\nexport default (() => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(ALL_POKEMONS);\n  console.log(loading, error, data);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 12\n      }\n    }, \"Please wait, we are loading the data...\");\n  } else {\n    if (data && data.pokemons && data.pokemons.edges && data.pokemons.edges.length) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n        setType: type => setType(type),\n        setName: name => setName(name),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(PokemonList, {\n        list: data.pokemons.edges,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 14\n        }\n      }, \"Sorry, something broke off. Please reload to try again!\");\n    }\n  }\n});","map":{"version":3,"sources":["/Users/nicolaromani/Desktop/projects/frontend-assignment/packages/client/src/components/containers/Main.tsx"],"names":["React","useReducer","useQuery","gql","Header","PokemonList","ALL_POKEMONS","initialState","name","type","reducer","state","action","payload","dispatch","loading","error","data","console","log","pokemons","edges","length","setType","setName"],"mappings":";AAAA,OAAOA,KAAP,IAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB,C,CAEA;;AACA,MAAMC,YAAY,GAAGH,GAAI;;;;;;;;;;;;;;;;;CAAzB,C,CAmBA;;AACA,MAAMI,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,IAAI,EAAE;AAFa,CAArB;;AAKA,MAAMC,OAAO,GAAG,CACdC,KADc,EAEdC,MAFc,KAGX;AACH,UAAQA,MAAM,CAACH,IAAf;AACE,SAAK,gBAAL;AACE,aAAO,EAAE,GAAGE,KAAL;AAAYH,QAAAA,IAAI,EAAEI,MAAM,CAACC,OAAP,IAAkB;AAApC,OAAP;;AACF,SAAK,gBAAL;AACE,aAAO,EAAE,GAAGF,KAAL;AAAYF,QAAAA,IAAI,EAAEG,MAAM,CAACC,OAAP,IAAkB;AAApC,OAAP;AAJJ;AAMD,CAVD;;AAYA,gBAAe,MAAM;AACnB,QAAM,CAACF,KAAD,EAAQG,QAAR,IAAoBb,UAAU,CAACS,OAAD,EAAUH,YAAV,CAApC;AACA,QAAM;AAAEQ,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2Bf,QAAQ,CAACI,YAAD,CAAzC;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ,EAAqBC,KAArB,EAA4BC,IAA5B;;AACA,MAAIF,OAAJ,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAAP;AACD,GAFD,MAEO;AACL,QACEE,IAAI,IACJA,IAAI,CAACG,QADL,IAEAH,IAAI,CAACG,QAAL,CAAcC,KAFd,IAGAJ,IAAI,CAACG,QAAL,CAAcC,KAAd,CAAoBC,MAJtB,EAKE;AACA,0BACE,uDACE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAGb,IAAD,IAAkBc,OAAO,CAACd,IAAD,CADpC;AAEE,QAAA,OAAO,EAAGD,IAAD,IAAkBgB,OAAO,CAAChB,IAAD,CAFpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAIE,oBAAC,WAAD;AAAa,QAAA,IAAI,EAAES,IAAI,CAACG,QAAL,CAAcC,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CADF;AAQD,KAdD,MAcO;AACL,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mEAAP;AACD;AACF;AACF,CAzBD","sourcesContent":["import React, { useState, useReducer } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport Header from \"./Header\";\nimport PokemonList from \"../presentational/PokemonList\";\n\n// base query\nconst ALL_POKEMONS = gql`\n  query pokemons {\n    pokemons(limit: 15) {\n      edges {\n        node {\n          id\n          name\n          types\n          classification\n        }\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n  }\n`;\n\n// init reducer variables\nconst initialState = {\n  name: \"\",\n  type: \"\",\n};\n\nconst reducer = (\n  state: { name: string; type: string },\n  action: { type?: string; payload?: string }\n) => {\n  switch (action.type) {\n    case \"SEARCH_BY_NAME\":\n      return { ...state, name: action.payload || \"\" };\n    case \"SEARCH_BY_TYPE\":\n      return { ...state, type: action.payload || \"\" };\n  }\n};\n\nexport default () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { loading, error, data } = useQuery(ALL_POKEMONS);\n  console.log(loading, error, data);\n  if (loading) {\n    return <div>Please wait, we are loading the data...</div>;\n  } else {\n    if (\n      data &&\n      data.pokemons &&\n      data.pokemons.edges &&\n      data.pokemons.edges.length\n    ) {\n      return (\n        <>\n          <Header\n            setType={(type: string) => setType(type)}\n            setName={(name: string) => setName(name)}></Header>\n          <PokemonList list={data.pokemons.edges}></PokemonList>\n        </>\n      );\n    } else {\n      return <div>Sorry, something broke off. Please reload to try again!</div>;\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}