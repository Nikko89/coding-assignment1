{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/nicolaromani/Desktop/projects/frontend-assignment/packages/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  query Pokemons($name: String, $after: ID, $limit: Int) {\\n    pokemons(q: $name, after: $after, limit: $limit) {\\n      edges {\\n        node {\\n          id\\n          name\\n          types\\n          classification\\n        }\\n      }\\n      pageInfo {\\n        endCursor\\n        hasNextPage\\n      }\\n    }\\n  }\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React from\"react\";import{List}from\"antd\";import PokemonListItem from\"./PokemonListItem\";import{useQuery}from\"@apollo/react-hooks\";import gql from\"graphql-tag\";var ALL_POKEMONS=gql(_templateObject());export default(function(props){var _useQuery=useQuery(ALL_POKEMONS,{variables:{name:props.name,type:props.type,limit:props.limit},fetchPolicy:\"cache-and-network\"}),loading=_useQuery.loading,error=_useQuery.error,data=_useQuery.data;return/*#__PURE__*/React.createElement(React.Fragment,null,data&&data.pokemons.edges.length===0?/*#__PURE__*/React.createElement(\"div\",{className:\"noPokemons\"},\"There are no pokemons matching your preferences! \",/*#__PURE__*/React.createElement(\"br\",null),\"Please try another configuration.\"):data&&/*#__PURE__*/React.createElement(List,{dataSource:data.pokemons.edges,pagination:{position:\"top\"},renderItem:function renderItem(item){return/*#__PURE__*/React.createElement(PokemonListItem,{node:item.node,key:Number(item.node.id)});}}));});","map":{"version":3,"sources":["/Users/nicolaromani/Desktop/projects/frontend-assignment/packages/client/src/components/presentational/PokemonList.tsx"],"names":["React","List","PokemonListItem","useQuery","gql","ALL_POKEMONS","props","variables","name","type","limit","fetchPolicy","loading","error","data","pokemons","edges","length","position","item","node","Number","id"],"mappings":"upBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,KAAqB,MAArB,CAEA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CACA,OAASC,QAAT,KAAyB,qBAAzB,CACA,MAAOC,CAAAA,GAAP,KAAgB,aAAhB,CAEA,GAAMC,CAAAA,YAAY,CAAGD,GAAH,mBAAlB,CAmBA,eAAe,SAACE,KAAD,CAA0D,eACtCH,QAAQ,CAACE,YAAD,CAAe,CACtDE,SAAS,CAAE,CACTC,IAAI,CAAEF,KAAK,CAACE,IADH,CAETC,IAAI,CAAEH,KAAK,CAACG,IAFH,CAGTC,KAAK,CAAEJ,KAAK,CAACI,KAHJ,CAD2C,CAMtDC,WAAW,CAAE,mBANyC,CAAf,CAD8B,CAC/DC,OAD+D,WAC/DA,OAD+D,CACtDC,KADsD,WACtDA,KADsD,CAC/CC,IAD+C,WAC/CA,IAD+C,CASvE,mBACE,wCACGA,IAAI,EAAIA,IAAI,CAACC,QAAL,CAAcC,KAAd,CAAoBC,MAApB,GAA+B,CAAvC,cACC,2BAAK,SAAS,CAAC,YAAf,mEACmD,8BADnD,qCADD,CAMCH,IAAI,eACF,oBAAC,IAAD,EACE,UAAU,CAAEA,IAAI,CAACC,QAAL,CAAcC,KAD5B,CAEE,UAAU,CAAE,CAAEE,QAAQ,CAAE,KAAZ,CAFd,CAGE,UAAU,CAAE,oBAACC,IAAD,qBACV,oBAAC,eAAD,EAAiB,IAAI,CAAEA,IAAI,CAACC,IAA5B,CAAkC,GAAG,CAAEC,MAAM,CAACF,IAAI,CAACC,IAAL,CAAUE,EAAX,CAA7C,EADU,EAHd,EARN,CADF,CAmBD,CA5BD","sourcesContent":["import React from \"react\";\nimport { List } from \"antd\";\nimport { PokemonNode, PokemonItem } from \"../../typescript/interfaces\";\nimport PokemonListItem from \"./PokemonListItem\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\nconst ALL_POKEMONS = gql`\n  query Pokemons($name: String, $after: ID, $limit: Int) {\n    pokemons(q: $name, after: $after, limit: $limit) {\n      edges {\n        node {\n          id\n          name\n          types\n          classification\n        }\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n  }\n`;\n\nexport default (props: { name: string; type: string; limit: number }) => {\n  const { loading, error, data } = useQuery(ALL_POKEMONS, {\n    variables: {\n      name: props.name,\n      type: props.type,\n      limit: props.limit,\n    },\n    fetchPolicy: \"cache-and-network\",\n  });\n  return (\n    <>\n      {data && data.pokemons.edges.length === 0 ? (\n        <div className=\"noPokemons\">\n          There are no pokemons matching your preferences! <br />\n          Please try another configuration.\n        </div>\n      ) : (\n        data && (\n          <List\n            dataSource={data.pokemons.edges}\n            pagination={{ position: \"top\" }}\n            renderItem={(item: PokemonNode<PokemonItem>) => (\n              <PokemonListItem node={item.node} key={Number(item.node.id)} />\n            )}></List>\n        )\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}