{"ast":null,"code":"var _jsxFileName = \"/Users/nicolaromani/Desktop/projects/frontend-assignment/packages/client/src/components/containers/Main.tsx\";\nimport React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport Header from \"../presentational/Header\";\nimport PokemonList from \"../presentational/PokemonList\"; // base query\n\nconst ALL_POKEMONS = gql`\n  query pokemons {\n    pokemons(limit: 15) {\n      edges {\n        node {\n          id\n          name\n          types\n        }\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n  }\n`;\nexport default (() => {\n  const [type, setType] = useState([]);\n  const [name, setName] = useState(\"\");\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(ALL_POKEMONS);\n  console.log(loading, error, data);\n  if (data && data.pokemons && data.pokemons.edges && data.pokemons.edges.length) return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(PokemonList, {\n    list: pokemons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }));\n});","map":{"version":3,"sources":["/Users/nicolaromani/Desktop/projects/frontend-assignment/packages/client/src/components/containers/Main.tsx"],"names":["React","useState","useQuery","gql","Header","PokemonList","ALL_POKEMONS","type","setType","name","setName","loading","error","data","console","log","pokemons","edges","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB,C,CAEA;;AACA,MAAMC,YAAY,GAAGH,GAAI;;;;;;;;;;;;;;;;CAAzB;AAkBA,gBAAe,MAAM;AACnB,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAEU,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BX,QAAQ,CAACI,YAAD,CAAzC;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ,EAAqBC,KAArB,EAA4BC,IAA5B;AACA,MACEA,IAAI,IACJA,IAAI,CAACG,QADL,IAEAH,IAAI,CAACG,QAAL,CAAcC,KAFd,IAGAJ,IAAI,CAACG,QAAL,CAAcC,KAAd,CAAoBC,MAJtB,EAME,oBACE,uDACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAEF,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMH,CAjBD","sourcesContent":["import React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport Header from \"../presentational/Header\";\nimport PokemonList from \"../presentational/PokemonList\";\n\n// base query\nconst ALL_POKEMONS = gql`\n  query pokemons {\n    pokemons(limit: 15) {\n      edges {\n        node {\n          id\n          name\n          types\n        }\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n  }\n`;\n\nexport default () => {\n  const [type, setType] = useState([]);\n  const [name, setName] = useState(\"\");\n  const { loading, error, data } = useQuery(ALL_POKEMONS);\n  console.log(loading, error, data);\n  if (\n    data &&\n    data.pokemons &&\n    data.pokemons.edges &&\n    data.pokemons.edges.length\n  )\n    return (\n      <>\n        <Header></Header>\n        <PokemonList list={pokemons}></PokemonList>\n      </>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}