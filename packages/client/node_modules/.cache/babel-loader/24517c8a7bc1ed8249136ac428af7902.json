{"ast":null,"code":"var _jsxFileName = \"/Users/nicolaromani/Desktop/projects/frontend-assignment/packages/client/src/components/containers/Main.tsx\";\nimport React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport Header from \"../presentational/Header\";\nimport PokemonList from \"../presentational/PokemonList\"; // base query\n\nconst ALL_POKEMONS = gql`\n  query pokemons {\n    pokemons(limit: 15) {\n      edges {\n        node {\n          id\n          name\n          types\n        }\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n  }\n`;\nexport default (() => {\n  const [type, setType] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [pokemons, setPokemons] = useState([]);\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(ALL_POKEMONS);\n  console.log(loading, error, data);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 12\n      }\n    }, \"Please wait, we are loading the data...\");\n  } else {\n    if (data && data.pokemons && data.pokemons.edges && data.pokemons.edges.length) {\n      setPokemons(data.pokemons.edges.length);\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(PokemonList, {\n      list: pokemons,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }));\n  }\n});","map":{"version":3,"sources":["/Users/nicolaromani/Desktop/projects/frontend-assignment/packages/client/src/components/containers/Main.tsx"],"names":["React","useState","useQuery","gql","Header","PokemonList","ALL_POKEMONS","type","setType","name","setName","pokemons","setPokemons","loading","error","data","console","log","edges","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB,C,CAEA;;AACA,MAAMC,YAAY,GAAGH,GAAI;;;;;;;;;;;;;;;;CAAzB;AAkBA,gBAAe,MAAM;AACnB,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAEY,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2Bb,QAAQ,CAACI,YAAD,CAAzC;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ,EAAqBC,KAArB,EAA4BC,IAA5B;;AACA,MAAIF,OAAJ,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAAP;AACD,GAFD,MAEO;AACL,QACEE,IAAI,IACJA,IAAI,CAACJ,QADL,IAEAI,IAAI,CAACJ,QAAL,CAAcO,KAFd,IAGAH,IAAI,CAACJ,QAAL,CAAcO,KAAd,CAAoBC,MAJtB,EAKE;AACAP,MAAAA,WAAW,CAACG,IAAI,CAACJ,QAAL,CAAcO,KAAd,CAAoBC,MAArB,CAAX;AACD;;AACD,wBACE,uDACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAER,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;AACF,CAxBD","sourcesContent":["import React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport Header from \"../presentational/Header\";\nimport PokemonList from \"../presentational/PokemonList\";\n\n// base query\nconst ALL_POKEMONS = gql`\n  query pokemons {\n    pokemons(limit: 15) {\n      edges {\n        node {\n          id\n          name\n          types\n        }\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n  }\n`;\n\nexport default () => {\n  const [type, setType] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [pokemons, setPokemons] = useState([]);\n  const { loading, error, data } = useQuery(ALL_POKEMONS);\n  console.log(loading, error, data);\n  if (loading) {\n    return <div>Please wait, we are loading the data...</div>;\n  } else {\n    if (\n      data &&\n      data.pokemons &&\n      data.pokemons.edges &&\n      data.pokemons.edges.length\n    ) {\n      setPokemons(data.pokemons.edges.length);\n    }\n    return (\n      <>\n        <Header></Header>\n        <PokemonList list={pokemons}></PokemonList>\n      </>\n    );\n  }\n};\n"]},"metadata":{},"sourceType":"module"}