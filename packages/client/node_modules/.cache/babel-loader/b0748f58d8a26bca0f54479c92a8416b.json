{"ast":null,"code":"var _jsxFileName = \"/Users/nicolaromani/Desktop/projects/frontend-assignment/packages/client/src/components/presentational/PokemonList.tsx\";\nimport React from \"react\";\nimport { List } from \"antd\";\nimport PokemonListItem from \"./PokemonListItem\";\nimport { useQuery } from \"@apollo/react-hooks\";\nexport default (props => {\n  const {\n    loading,\n    error,\n    data: genericData,\n    fetchMore: genericFetchMore\n  } = useQuery(ALL_POKEMONS, {\n    variables: {\n      name: props.name,\n      limit: props.limit\n    },\n    skip: !!props.type,\n    fetchPolicy: \"cache-and-network\"\n  });\n  const {\n    loading: loadingTypes,\n    error: errorTypes,\n    data: typeData,\n    fetchMore: typeFetchMore\n  } = useQuery(POKEMONS_BY_TYPE, {\n    variables: {\n      type: props.type,\n      limit: props.limit\n    },\n    skip: !props.type,\n    fetchPolicy: \"cache-and-network\"\n  });\n\n  if (error || errorTypes) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 12\n      }\n    }, \"Sorry, something broke off. Reload the app to try again!\");\n  }\n\n  if (genericData) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, genericData && genericData.pokemons.edges.length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"noPokemons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, \"There are no pokemons matching your preferences! \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 62\n      }\n    }), \"Please try another configuration.\") : /*#__PURE__*/React.createElement(List, {\n      loading: !!loading,\n      loadMore: \"ciiao\",\n      dataSource: genericData.pokemons.edges,\n      pagination: {\n        position: \"top\",\n        pageSize: props.pageQuantity\n      },\n      renderItem: item => /*#__PURE__*/React.createElement(PokemonListItem, {\n        node: item.node,\n        key: Number(item.node.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }));\n  } else if (typeData) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, typeData && typeData.pokemonsByType.edges.length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"noPokemons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, \"There are no pokemons matching your preferences! \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 62\n      }\n    }), \"Please try another configuration.\") : /*#__PURE__*/React.createElement(List, {\n      loading: !!loadingTypes,\n      dataSource: typeData.pokemonsByType.edges,\n      loadMore: \"ciao\",\n      pagination: {\n        position: \"top\",\n        pageSize: props.pageQuantity\n      },\n      renderItem: item => /*#__PURE__*/React.createElement(PokemonListItem, {\n        node: item.node,\n        key: Number(item.node.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"noPokemons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }, \"There are no pokemons matching your preferences! \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 58\n      }\n    }), \"Please try another configuration.\");\n  }\n});","map":{"version":3,"sources":["/Users/nicolaromani/Desktop/projects/frontend-assignment/packages/client/src/components/presentational/PokemonList.tsx"],"names":["React","List","PokemonListItem","useQuery","props","loading","error","data","genericData","fetchMore","genericFetchMore","ALL_POKEMONS","variables","name","limit","skip","type","fetchPolicy","loadingTypes","errorTypes","typeData","typeFetchMore","POKEMONS_BY_TYPE","pokemons","edges","length","position","pageSize","pageQuantity","item","node","Number","id","pokemonsByType"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { List } from \"antd\";\nimport { PokemonNode, PokemonItem } from \"../../typescript/interfaces\";\nimport PokemonListItem from \"./PokemonListItem\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\nexport default (props: {\n  name: string;\n  type: string;\n  limit: number;\n  pageQuantity: number;\n}) => {\n  const {\n    loading,\n    error,\n    data: genericData,\n    fetchMore: genericFetchMore,\n  } = useQuery(ALL_POKEMONS, {\n    variables: {\n      name: props.name,\n      limit: props.limit,\n    },\n    skip: !!props.type,\n    fetchPolicy: \"cache-and-network\",\n  });\n  const {\n    loading: loadingTypes,\n    error: errorTypes,\n    data: typeData,\n    fetchMore: typeFetchMore,\n  } = useQuery(POKEMONS_BY_TYPE, {\n    variables: {\n      type: props.type,\n      limit: props.limit,\n    },\n    skip: !props.type,\n    fetchPolicy: \"cache-and-network\",\n  });\n  if (error || errorTypes) {\n    return <div>Sorry, something broke off. Reload the app to try again!</div>;\n  }\n  if (genericData) {\n    return (\n      <>\n        {genericData && genericData.pokemons.edges.length === 0 ? (\n          <div className=\"noPokemons\">\n            There are no pokemons matching your preferences! <br />\n            Please try another configuration.\n          </div>\n        ) : (\n          <List\n            loading={!!loading}\n            loadMore=\"ciiao\"\n            dataSource={genericData.pokemons.edges}\n            pagination={{ position: \"top\", pageSize: props.pageQuantity }}\n            renderItem={(item: PokemonNode<PokemonItem>) => (\n              <PokemonListItem node={item.node} key={Number(item.node.id)} />\n            )}></List>\n        )}\n      </>\n    );\n  } else if (typeData) {\n    return (\n      <>\n        {typeData && typeData.pokemonsByType.edges.length === 0 ? (\n          <div className=\"noPokemons\">\n            There are no pokemons matching your preferences! <br />\n            Please try another configuration.\n          </div>\n        ) : (\n          <List\n            loading={!!loadingTypes}\n            dataSource={typeData.pokemonsByType.edges}\n            loadMore=\"ciao\"\n            pagination={{ position: \"top\", pageSize: props.pageQuantity }}\n            renderItem={(item: PokemonNode<PokemonItem>) => (\n              <PokemonListItem node={item.node} key={Number(item.node.id)} />\n            )}></List>\n        )}\n      </>\n    );\n  } else {\n    return (\n      <div className=\"noPokemons\">\n        There are no pokemons matching your preferences! <br />\n        Please try another configuration.\n      </div>\n    );\n  }\n};\n"]},"metadata":{},"sourceType":"module"}